services:
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-convolens_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-convolens_pass}
      - POSTGRES_DB=${POSTGRES_DB:-convolens_db}
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-convolens_user} -d ${POSTGRES_DB:-convolens_db}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: gunicorn -w 4 -b 0.0.0.0:5000 "app.app:create_app()"
    volumes:
      - .:/app
      - uploads_data:/app/uploads
    ports:
      - '5000:5000'
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - FLASK_DEBUG=${FLASK_DEBUG:-1}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-convolens_user}:${POSTGRES_PASSWORD:-convolens_pass}@db:5432/${POSTGRES_DB:-convolens_db}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build: .
    command: celery -A app.celery_app.celery worker -l info -Q celery --concurrency=2
    volumes:
      - .:/app
      - uploads_data:/app/uploads
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-convolens_user}:${POSTGRES_PASSWORD:-convolens_pass}@db:5432/${POSTGRES_DB:-convolens_db}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  uploads_data:
